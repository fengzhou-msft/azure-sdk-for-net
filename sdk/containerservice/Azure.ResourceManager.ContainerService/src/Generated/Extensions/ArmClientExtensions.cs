// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.ResourceManager;

namespace Azure.ResourceManager.ContainerService
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public static partial class ArmClientExtensions
    {
        #region OSOptionProfile
        /// <summary> Gets an object representing a OSOptionProfile along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="OSOptionProfile" /> object. </returns>
        public static OSOptionProfile GetOSOptionProfile(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new OSOptionProfile(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ManagedClusterUpgradeProfile
        /// <summary> Gets an object representing a ManagedClusterUpgradeProfile along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ManagedClusterUpgradeProfile" /> object. </returns>
        public static ManagedClusterUpgradeProfile GetManagedClusterUpgradeProfile(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ManagedClusterUpgradeProfile(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region ManagedCluster
        /// <summary> Gets an object representing a ManagedCluster along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ManagedCluster" /> object. </returns>
        public static ManagedCluster GetManagedCluster(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new ManagedCluster(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region MaintenanceConfiguration
        /// <summary> Gets an object representing a MaintenanceConfiguration along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MaintenanceConfiguration" /> object. </returns>
        public static MaintenanceConfiguration GetMaintenanceConfiguration(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new MaintenanceConfiguration(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region AgentPool
        /// <summary> Gets an object representing a AgentPool along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AgentPool" /> object. </returns>
        public static AgentPool GetAgentPool(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new AgentPool(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region AgentPoolUpgradeProfile
        /// <summary> Gets an object representing a AgentPoolUpgradeProfile along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="AgentPoolUpgradeProfile" /> object. </returns>
        public static AgentPoolUpgradeProfile GetAgentPoolUpgradeProfile(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new AgentPoolUpgradeProfile(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region PrivateEndpointConnection
        /// <summary> Gets an object representing a PrivateEndpointConnection along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="PrivateEndpointConnection" /> object. </returns>
        public static PrivateEndpointConnection GetPrivateEndpointConnection(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new PrivateEndpointConnection(clientOptions, credential, uri, pipeline, id));
        }
        #endregion

        #region Snapshot
        /// <summary> Gets an object representing a Snapshot along with the instance operations that can be performed on it but with no data. </summary>
        /// <param name="armClient"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Snapshot" /> object. </returns>
        public static Snapshot GetSnapshot(this ArmClient armClient, ResourceIdentifier id)
        {
            return armClient.UseClientContext((uri, credential, clientOptions, pipeline) => new Snapshot(clientOptions, credential, uri, pipeline, id));
        }
        #endregion
    }
}
